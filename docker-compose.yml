services:

  app:
    build: .
    image: im-share:latest
    restart: unless-stopped
    env_file: .env
    ports:
      - 3000:3000
    depends_on:
      - db
      - cache

  db:
    image: postgres:16-alpine
    restart: unless-stopped
    ports:
      - 5432:5432
    env_file: .env
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cache:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    volumes:
      - cache_data:/data
    command: [ "redis-server", "--save", "60", "1", "--loglevel", "warning" ]
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  db_data:
  cache_data:
